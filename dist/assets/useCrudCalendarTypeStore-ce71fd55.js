import{p as i,q as s,r as n,s as l}from"./index-dd53741e.js";const o=l(),d=i("useCrudCalendarTypeStore",{state:()=>({loading:!0,typeAction:"list",action:"list",calendarTypeData:{},keyList:0,calendarTypes:[],totalData:0,totalPage:0,currentPage:1,lastPage:0,formulario:{id:null,name:null,color:null}}),getters:{},actions:{clearFormulario(){this.formulario={id:null,name:null,color:null}},async fetchAll(e){this.loading=!0,await s.post("/calendarType-list",e).then(a=>{this.loading=!1,this.calendarTypes=a.data.calendarTypes,this.totalData=a.data.totalData,this.totalPage=a.data.totalPage,this.currentPage=a.data.currentPage,this.lastPage=a.data.lastPage}).catch(a=>{this.loading=!1,console.log("error",a)})},async fetchSave(){const e=n();return e.isLoading=!0,await s.post("/calendarType-create",this.formulario).then(a=>(e.isLoading=!1,a.data.code===200?o.toast("Éxito",a.data.message,"success"):o.toast("Error",a.data.message,"danger"),{message:a.data.message,code:a.data.code,errors:a.data.errors})).catch(async a=>(e.isLoading=!1,a.response.status===500&&o.toast("Error",a.response.data.message,"danger"),console.log(await a),{errors:a.response.data.errors,code:a.response.data.code,message:a.response.data.message}))},async fetchDelete(e){const a=n();a.isLoading=!0,await s.delete("/calendarType-delete/"+e).then(t=>{a.isLoading=!1,o.toast("Éxito",t.data.message,"success")}).catch(async t=>{a.isLoading=!1,console.log(await t)})},async fetchInfo(e){const a=n();a.isLoading=!0,await s.get(`/calendarType-info/${e}`).then(async t=>{a.isLoading=!1,this.calendarTypeData.id=e,this.formulario=await t.data.data}).catch(async t=>{a.isLoading=!1,console.log(await t)})}}});export{d as useCrudCalendarTypeStore};
