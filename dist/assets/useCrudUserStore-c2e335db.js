import{f as d,g as s,u as i,S as l,h as g}from"./index-c9350ca5.js";const o=g(),u=d("useCrudUserStore",{state:()=>({loading:!0,formulario:{id:null,email:"",name:"",lastName:"",role_id:null,identity_type_id:null,charge_id:null,idNumber:""},typeAction:"list",userData:{},keyList:0,users:[],totalData:0,totalPage:0,currentPage:1,lastPage:0,arrayRoles:[],countRoles:0,identityTypes:[],charges_arrayInfo:[],charges_countLinks:0}),getters:{},actions:{clearFormulario(){this.formulario={id:null,email:"",name:"",lastName:"",role_id:null,identity_type_id:null,charge_id:null,idNumber:""}},async fetchAll(e){this.loading=!0,await s.post("/user-list",e).then(a=>{this.loading=!1,this.users=a.data.user,this.totalData=a.data.totalData,this.totalPage=a.data.totalPage,this.currentPage=a.data.currentPage,this.lastPage=a.data.lastPage}).catch(async a=>{this.loading=!1,console.log(await a)})},async fetchSave(){const e=i(),a=new FormData;for(const t in this.formulario)a.append(t,this.formulario[t]);return e.isLoading=!0,await s.post("/user-create",a).then(t=>(e.isLoading=!1,t.data.code===200?(this.formulario=t.data.data,o.toast("Éxito",t.data.message,"success")):o.toast("Error",t.data.message,"danger"),{code:t.data.code,message:t.data.message,errors:t.data.errors})).catch(async t=>(e.isLoading=!1,t.response.status===500&&o.toast("Error",t.response.data.message,"danger"),console.log(await t),{errors:t.response.data.errors,code:t.response.data.code,message:t.response.data.message}))},async fetchDataForm(){const e=i();e.isLoading=!0,await s.post("/user-dataForm").then(a=>{e.isLoading=!1,this.identityTypes=a.data.identityTypes,this.arrayRoles=a.data.roles,this.countRoles=a.data.roles.length,this.charges_arrayInfo=a.data.charges_arrayInfo,this.charges_countLinks=a.data.charges_countLinks}).catch(async a=>{e.isLoading=!1,console.log(await a)})},async fetchDelete(e){const a=i();a.isLoading=!0,await s.delete("/user-delete/"+e).then(t=>{a.isLoading=!1,o.toast("Éxito",t.data.message,"success")}).catch(async t=>{a.isLoading=!1,console.log(await t)})},async fetchInfo(e){const a=i();a.isLoading=!0,await s.get(`/user-info/${e}`).then(async t=>{console.log("RESULT",t),a.isLoading=!1,this.formulario=await t.data.data,this.userData.id=e}).catch(async t=>{a.isLoading=!1,console.log(await t)})},changeState(e,a){const t=i();let n="";a==0?n="activar":n="inactivar",l.fire({title:"¿Está seguro de "+n+" el Registro seleccionado?",showDenyButton:!0,confirmButtonText:"Si",denyButtonText:"No",allowOutsideClick:!1}).then(c=>{c.isConfirmed?(t.isLoading=!0,s.post("/user-changeState",e).then(r=>{t.isLoading=!1,r.data.code==200&&o.toast("Éxito",r.data.msg,"success"),r.data.code==500&&o.toast("Éxito",r.data.msg,"danger")})):n=="activar"?e.state=0:e.state=1})},async fetchSelectCharges(e){this.loading=!0,await s.post("/charge-select2InfiniteList",e).then(async a=>{this.loading=!1,this.charges_arrayInfo=await a.data.charges_arrayInfo,this.charges_countLinks=await a.data.charges_countLinks}).catch(async a=>{this.loading=!1,console.log(await a)})}}});export{u as useCrudUserStore};
